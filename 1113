#메모리 할당하기
#include <stdio.h>
#include<stdlib.h>

int main()
{
	int num1 = 20;
	int* numPtr1;

	numPtr1 = &num1;
	
	int* numPtr2;
	
	numPtr2 = (int*)malloc(sizeof(int));

	printf("%p\n", numPtr1);

	printf("%p\n", numPtr2);

	free(numPtr2);

	return 0;
}

#메모리에 값 저장하기
#include <stdio.h>
#include <stdlib.h>    // malloc, free 함수가 선언된 헤더 파일

int main()
{
    int* numPtr;    // int형 포인터 선언

    numPtr = (int*)malloc(sizeof(int));    // int의 크기 4바이트만큼 동적 메모리 할당

    *numPtr = 10;   // 포인터를 역참조한 뒤 값 할당

    printf("%d\n", *numPtr);    // 10: 포인터를 역참조하여 메모리에 저장된 값 출력

    free(numPtr);    // 동적 메모리 해제

    return 0;
}

#포인터와 malloc을 사용하여 배열크기 정하기
#include <stdio.h>
#include <malloc.h> // malloc함수가 정의된 있는 파일을 불러옵니다.

int main()
{
    int* arr; // 포인터변수 선언
    int size; // 배열의 크기
    int i;

    printf("배열의 크기 입력: \n"); // 사용자로부터 배열의 크기 입력받음
    scanf_s("%d", &size);

    arr = (int*)malloc(sizeof(int) * size); // 배열 동적 할당
    if (arr == NULL) {
        printf("메모리 할당 실패\n");
        return 1; // 오류 발생 시 프로그램 종료
    }

    printf("값 입력\n");
    for (i = 0; i < size; i++)
    {
        printf("arr[%d]: ", i);
        scanf_s("%d", &arr[i]); // 배열 입력
    }

    printf("입력한 배열의 값 출력\n");
    for (i = 0; i < size; i++)
    {
        printf("arr[%d]: %d\n", i, arr[i]);
    }

    free(arr); // 동적 할당한 메모리 해제
    return 0;
}
